/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PhysicsRouteImport } from './routes/physics'
import { Route as ParallaxRouteImport } from './routes/parallax'
import { Route as DemoRouteImport } from './routes/demo'
import { Route as IndexRouteImport } from './routes/index'

const PhysicsRoute = PhysicsRouteImport.update({
  id: '/physics',
  path: '/physics',
  getParentRoute: () => rootRouteImport,
} as any)
const ParallaxRoute = ParallaxRouteImport.update({
  id: '/parallax',
  path: '/parallax',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo': typeof DemoRoute
  '/parallax': typeof ParallaxRoute
  '/physics': typeof PhysicsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo': typeof DemoRoute
  '/parallax': typeof ParallaxRoute
  '/physics': typeof PhysicsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo': typeof DemoRoute
  '/parallax': typeof ParallaxRoute
  '/physics': typeof PhysicsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/demo' | '/parallax' | '/physics'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/demo' | '/parallax' | '/physics'
  id: '__root__' | '/' | '/demo' | '/parallax' | '/physics'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoRoute: typeof DemoRoute
  ParallaxRoute: typeof ParallaxRoute
  PhysicsRoute: typeof PhysicsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/physics': {
      id: '/physics'
      path: '/physics'
      fullPath: '/physics'
      preLoaderRoute: typeof PhysicsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/parallax': {
      id: '/parallax'
      path: '/parallax'
      fullPath: '/parallax'
      preLoaderRoute: typeof ParallaxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoRoute: DemoRoute,
  ParallaxRoute: ParallaxRoute,
  PhysicsRoute: PhysicsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
